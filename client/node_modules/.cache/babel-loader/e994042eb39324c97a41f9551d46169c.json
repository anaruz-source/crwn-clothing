{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/react/crwn-cloth-learning/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from './../../redux/user/user.actions';\nimport './sign-in.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = credentials;\n\n  handleSubmit = e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...credentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }, this);\n};\n\n_s(SignIn, \"qEOElbZrVxmrIR5KhUitKj8j454=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","useEffect","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","credentials","setCredentials","email","password","handleSubmit","e","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAGA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,iCAApD;AAEA,OAAO,uBAAP;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA4C;AAAA;;AAGrD,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC;AAE7CU,IAAAA,KAAK,EAAE,EAFsC;AAG7CC,IAAAA,QAAQ,EAAE;AAHmC,GAAD,CAA9C;AAMA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,WAA5B;;AAEFI,EAAAA,YAAY,GAAGC,CAAC,IAAI;AAEhBA,IAAAA,CAAC,CAACC,cAAF;AAGAR,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AACH,GAND;;AAQD,QAAMI,YAAY,GAAGF,CAAC,IAAI;AACtB,UAAM;AAACG,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBJ,CAAC,CAACK,MAAxB;AAEDT,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACQ,IAAD,GAAQC;AAAzB,KAAD,CAAd;AAED,GALF;;AAQG,sBAAU;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG,eAKN;AAAM,MAAA,QAAQ,EAAIL,YAAlB;AAAA,8BAEO,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAqC,QAAA,EAAE,EAAC,OAAxC;AAAgD,QAAA,KAAK,EAAEF,KAAvD;AAA8D,QAAA,YAAY,EAAIK,YAA9E;AAA4F,QAAA,KAAK,EAAC,OAAlG;AAA0G,QAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA,cAFP,eAKM,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAA2C,QAAA,EAAE,EAAC,UAA9C;AAAyD,QAAA,KAAK,EAAEJ,QAAhE;AAA0E,QAAA,YAAY,EAAEI,YAAxF;AAAuG,QAAA,KAAK,EAAC,UAA7G;AAAwH,QAAA,QAAQ;AAAhI;AAAA;AAAA;AAAA;AAAA,cALN,eAOM;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAGE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEV,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPN;AAAA;AAAA;AAAA;AAAA;AAAA,YALM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAsBL,CAjDD;;GAAME,M;;KAAAA,M;;AAmDN,MAAMY,kBAAkB,GAAGC,QAAQ,KAAI;AAEnCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAACf,iBAAiB,EAAlB,CAFE;AAGnCC,EAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACd,gBAAgB,CAAC;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAHZ,CAAJ,CAAnC;;AAMA,eAAeT,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nimport { googleSignInStart, emailSignInStart } from './../../redux/user/user.actions'\n\nimport './sign-in.styles.scss'\n\n\nconst SignIn = ({ emailSignInStart, googleSignInStart}) => {\n\n\n      const [credentials, setCredentials] = useState({\n\n        email: '',\n        password: ''\n      })\n\n      const { email, password } = credentials\n\n    handleSubmit = e => {\n\n        e.preventDefault()\n\n\n        emailSignInStart(email, password )\n    }\n\n   const handleChange = e => {\n       const {name, value} = e.target\n\n      setCredentials({...credentials, [name]: value})\n    \n    }\n\n\n      return (  <div className='sign-in'>\n\n             <h2>I already have an account</h2>\n             <span>Sign in with your email and password</span>\n\n          <form onSubmit= { handleSubmit }>\n\n                 <FormInput type='email' name='email' id='email' value={email} handleChange = {handleChange} label='email' required/>\n                \n\n                <FormInput type='password' name='password' id='password' value={password} handleChange={handleChange}  label='password' required />\n                \n                <div className='buttons'>\n\n\n                  <CustomButton type='submit' >Sign In</CustomButton>\n                  <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton>\n                </div>\n\n             </form>\n        </div>\n      )\n}\n\nconst mapDispatchToProps = dispatch =>({\n\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}