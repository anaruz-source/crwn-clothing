{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV == 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","fetchCollectionsStart","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAQC,oBAAR,MAAkC,YAAlC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAGA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAA3B,EAA0C;AAEtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBC,qBAAnB;AAEA,MAAMC,SAAS,GAAGZ,YAAY,CAAES,KAAF,CAA9B;AAEA,SAASA,KAAT,EAAgBG,SAAhB","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\nimport logger from 'redux-logger'\nimport  createSagaMiddleware from 'redux-saga'\nimport { persistStore } from 'redux-persist'\n\nimport rootReducer from './root-reducer'\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst middlewares = [sagaMiddleware]\n\nif(process.env.NODE_ENV == 'development') {\n\n    middlewares.push(logger)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(fetchCollectionsStart)\n\nconst persistor = persistStore( store)\n\nexport { store, persistor }\n\n\n"]},"metadata":{},"sourceType":"module"}