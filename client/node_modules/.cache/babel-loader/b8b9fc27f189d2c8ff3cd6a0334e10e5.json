{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyBGYCJYGn34_y-RSA_usMBq8IYghHJrP3M\",\n  authDomain: \"crwn-bdd.firebaseapp.com\",\n  databaseURL: \"https://crwn-bdd.firebaseio.com\",\n  projectId: \"crwn-bdd\",\n  storageBucket: \"crwn-bdd.appspot.com\",\n  messagingSenderId: \"162448512064\",\n  appId: \"1:162448512064:web:74f702cb6762278f5dbba5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/12306ghMMMd`);\n  const snap = await userRef.get();\n  console.log('userRef', userRef);\n  console.log('snap', snap); // if(snap.exists) return userRef // do nothing if user exists, return userRef\n  // const {displayName, email} = userAuth\n  // const createAt = new Date()\n  // try {\n  //     userRef.set({\n  //         displayName,\n  //         email,\n  //         createAt,\n  //         ...additionalData\n  //     })\n  // } catch (error) {\n  //     console.log('error creating user', error.message)\n  // }\n\n  return userRef;\n}; // Initialize Firebase\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snap","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,0BAFD;AAGXC,EAAAA,WAAW,EAAE,iCAHF;AAIXC,EAAAA,SAAS,EAAE,UAJA;AAKXC,EAAAA,aAAa,EAAE,sBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,mBAAf,CAAhB;AACA,QAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,OAAvB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EARyE,CAUzE;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAAOH,OAAP;AACH,CA/BM,C,CAgCP;;AAEAZ,QAAQ,CAACmB,aAAT,CAAuBlB,MAAvB;AAEA,OAAO,MAAMmB,IAAI,GAAGpB,QAAQ,CAACoB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAIrB,QAAQ,CAACoB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAerB,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n    apiKey: \"AIzaSyBGYCJYGn34_y-RSA_usMBq8IYghHJrP3M\",\n    authDomain: \"crwn-bdd.firebaseapp.com\",\n    databaseURL: \"https://crwn-bdd.firebaseio.com\",\n    projectId: \"crwn-bdd\",\n    storageBucket: \"crwn-bdd.appspot.com\",\n    messagingSenderId: \"162448512064\",\n    appId: \"1:162448512064:web:74f702cb6762278f5dbba5\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\n    if (!userAuth) return\n\n    const userRef = firestore.doc(`users/12306ghMMMd`)\n    const snap = await userRef.get()\n\n    console.log('userRef', userRef)\n    console.log('snap', snap)\n\n    // if(snap.exists) return userRef // do nothing if user exists, return userRef\n    \n    // const {displayName, email} = userAuth\n\n    // const createAt = new Date()\n\n\n    // try {\n        \n    //     userRef.set({\n    //         displayName,\n    //         email,\n    //         createAt,\n    //         ...additionalData\n    //     })\n    // } catch (error) {\n        \n    //     console.log('error creating user', error.message)\n    // }\n\n    return userRef\n}\n// Initialize Firebase\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({prompt: 'select_account'})\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}