{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/react/crwn-cloth-learning/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from './../../redux/user/user.actions';\nimport './sign-up.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = credentials;\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...credentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \" I do not have account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up using email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        label: \"Display Name\",\n        value: displayName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        label: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"unMawuxmJLvyS1uwPzG9WC/dImg=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: credentials => dispatch(signUpStart(credentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","credentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport {signUpStart} from './../../redux/user/user.actions'\n\nimport './sign-up.styles.scss'\n\n\nconst  SignUp = ({ signUpStart }) => {\n\n    const [credentials, setCredentials] = useState({\n\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    \n\n\n    const { displayName, email, password, confirmPassword } = credentials\n\n\n     handleSubmit = async e  => {\n\n        e.preventDefault()\n\n         if(password !== confirmPassword) {\n\n            alert('passwords don\\'t match');\n            return\n         }\n\n        signUpStart({ email, password, displayName})\n     }\n\n    const handleChange = e => {\n\n        const {name, value} = e.target\n\n       setCredentials({...credentials, [name] : value})\n     }\n\n        return (\n            <div className='sign-up'>\n\n                <h2 className='title'> I do not have account</h2>\n                <span>Sign up using email and password</span>\n\n                <form className='sign-up-form' onSubmit = {handleSubmit}>\n                     <FormInput \n                        type='text'\n                        name='displayName'\n                        label ='Display Name'\n                        value = {displayName}\n                        onChange = {handleChange}\n                        required\n                     />\n                    \n\n                    <FormInput\n                        type='email'\n                        name='email'\n                        label='Email'\n                        value={email}\n                        onChange={handleChange}\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='password'\n                        label='Password'\n                        value={password}\n                        onChange={handleChange}\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        label='Confirm Password'\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        required\n                    />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n\n                </form>\n            </div>\n        )\n     }\n\n\nconst mapDispatchToProps = dispatch =>({\n\n    signUpStart: credentials => dispatch(signUpStart(credentials))\n})\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}