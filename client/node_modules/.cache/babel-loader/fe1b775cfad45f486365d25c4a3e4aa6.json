{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/react/crwn-cloth-learning/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsFetchingColletions, selectIsCollectionsLoaded, selectIsFetchingCollections } from '../../redux/shop/shop.selectors';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsFetchingCollections,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","createStructuredSelector","fetchCollectionsStartAsync","selectIsFetchingColletions","selectIsCollectionsLoaded","selectIsFetchingCollections","CollectionOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","isFetchingCollections","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,EAAgEC,2BAAhE,QAAmG,iCAAnG;AAGA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAMA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,kBAAD,CAAjD;KAAMG,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;MAAMG,yB;;AAGN,MAAOC,QAAP,SAAwBb,KAAK,CAACc,SAA9B,CAAwC;AAIpCC,EAAAA,iBAAiB,GAAG;AAEhB,UAAM;AAAEX,MAAAA;AAAF,QAAiC,KAAKY,KAA5C;AAEAZ,IAAAA,0BAA0B;AAE7B;;AAEEa,EAAAA,MAAM,GAAG;AAEN,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAuD,KAAKJ,KAAlE;AAGA,wBAAU;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BAEN,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAKL,KAAF,iBAAa,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAK,CAACI,mBAA9C;AAAA,aAAwEJ;AAAxE;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGL,KAAD,iBAAY,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAK,CAACI,mBAA1C;AAAA,aAAoEJ;AAApE;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,cAHM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AAQF;;AAzBgC;;AA6BxC,MAAMM,eAAe,GAAGnB,wBAAwB,CAAE;AAE9CoB,EAAAA,qBAAqB,EAAEhB,2BAFuB;AAG9Ca,EAAAA,mBAAmB,EAAEd;AAHyB,CAAF,CAAhD;;AAMA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AAEpCrB,EAAAA,0BAA0B,EAAE,MAAMqB,QAAQ,CAACrB,0BAA0B,EAA3B;AAFN,CAAL,CAAnC;;AAMA,eAAeH,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\nimport { selectIsFetchingColletions, selectIsCollectionsLoaded, selectIsFetchingCollections } from '../../redux/shop/shop.selectors'\n\n\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\n\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\n\nclass  ShopPage extends React.Component {\n         \n\n\n    componentDidMount() {\n\n        const { fetchCollectionsStartAsync } = this.props\n\n        fetchCollectionsStartAsync()\n\n    }\n\n       render() {\n\n          const { match, isCollectionFetching, isCollectionsLoaded } = this.props\n    \n\n          return  ( <div className = 'shop-page' >\n\n              <Route exact path={`${match.path}`} render={ ( props ) => <CollectionOverviewWithSpinner isLoading = { !isCollectionsLoaded } {...props }  /> } />\n              <Route path={`${match.path}/:collectionId`} render={(props) => (<CollectionPageWithSpinner isLoading = { !isCollectionsLoaded } {...props } /> )} />\n           \n           </div> )\n\n\n       }\n    }\n\n\nconst mapStateToProps = createStructuredSelector ({\n\n    isFetchingCollections: selectIsFetchingCollections,\n    isCollectionsLoaded: selectIsCollectionsLoaded\n\n})\nconst mapDispatchToProps = dispatch => ({\n         \n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}