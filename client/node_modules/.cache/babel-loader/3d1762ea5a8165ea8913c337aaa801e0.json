{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from './../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const {\n    user\n  } = yield auth.signInWithEmailAndPassword(email, password);\n  const userRef = yield call(createUserProfileDocument, user);\n  const snapShot = yield userRef.get();\n  return snapShot;\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const snapShot = yield getSnapshotFromUserAuth(user);\n    yield put(signInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    yield put(signInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","user","signInWithEmailAndPassword","email","password","userRef","snapShot","get","signInWithGoogle","signInWithPopup","id","data","error","signInWithEmail","payload","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAUC,aAAV,EAAyBC,aAAzB,QAA6C,gBAA7C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,iCAAhE;AAGA,OAAO,UAAUC,uBAAV,CAAmCC,QAAnC,EAA6C;AAEhD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,IAAI,CAACM,0BAAL,CAAgCC,KAAhC,EAAuCC,QAAvC,CAAvB;AAEA,QAAMC,OAAO,GAAG,MAAMd,IAAI,CAACO,yBAAD,EAA4BG,IAA5B,CAA1B;AAEA,QAAMK,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAEA,SAAOD,QAAP;AACH;AACD,OAAO,UAAUE,gBAAV,GAA6B;AAEhC,MAAI;AAEG,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAAvB;AAGA,UAAMS,QAAQ,GAAG,MAAMP,uBAAuB,CAACE,IAAD,CAA9C;AAEA,UAAMX,GAAG,CAENI,aAAa,CAAE;AAAEgB,MAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAAf;AAAmB,SAAGJ,QAAQ,CAACK,IAAT;AAAtB,KAAF,CAFP,CAAT;AAON,GAdD,CAcE,OAAOC,KAAP,EAAc;AAEZ,UAAMtB,GAAG,CAAEK,aAAa,CAACiB,KAAD,CAAf,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEX,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAE/D,MAAI;AAIA,UAAMd,GAAG,CAELI,aAAa,CAAC;AAAEgB,MAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAAf;AAAmB,SAAGJ,QAAQ,CAACK,IAAT;AAAtB,KAAD,CAFR,CAAT;AAOH,GAXD,CAWE,OAAOC,KAAP,EAAc;AAEZ,UAAMtB,GAAG,CACDK,aAAa,CAACiB,KAAD,CADZ,CAAT;AAGH;AACJ;AAED,OAAO,UAAUG,mBAAV,GAA+B;AAE/B,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACN;AAED,OAAO,UAAUS,kBAAV,GAA+B;AAElC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCL,eAAtC,CAAhB;AACH;AACD,OAAQ,UAAUM,SAAV,GAAsB;AAE1B,QAAM3B,GAAG,CAAC,CAAED,IAAI,CAACwB,mBAAD,CAAN,EAA6BxB,IAAI,CAAC0B,kBAAD,CAAjC,CAAD,CAAT;AAEH","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\n\nimport UserActionTypes from './user.types'\n\nimport {  signInSuccess, signInFailure} from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument } from './../../firebase/firebase.utils'\n\n\nexport function* getSnapshotFromUserAuth( userAuth) {\n\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n\n    const userRef = yield call(createUserProfileDocument, user)\n\n    const snapShot = yield userRef.get()\n\n    return snapShot\n}\nexport function* signInWithGoogle() {\n\n    try {\n        \n           const { user } = yield auth.signInWithPopup(googleProvider)\n\n\n           const snapShot = yield getSnapshotFromUserAuth(user)\n\n           yield put(\n               \n              signInSuccess( { id: snapShot.id, ...snapShot.data()})\n              \n              )\n  \n\n    } catch (error) {\n        \n        yield put( signInFailure(error))\n    }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\n    try {\n\n\n\n        yield put(\n\n            signInSuccess({ id: snapShot.id, ...snapShot.data() })\n\n        ) \n\n\n    } catch (error) {\n\n        yield put(\n                signInFailure(error)\n             )\n    }\n}\n\nexport function* onGoogleSignInStart(){\n\n       yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\nexport  function* userSagas() {\n    \n    yield all([ call(onGoogleSignInStart), call(onEmailSignInStart)])\n\n}"]},"metadata":{},"sourceType":"module"}