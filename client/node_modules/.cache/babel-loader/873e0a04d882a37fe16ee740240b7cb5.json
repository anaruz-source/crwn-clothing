{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSucces, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from './../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const snapShot = yield userRef.get();\n  yield put(signInSuccess({\n    id: snapShot.id,\n    ...snapShot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSucces({\n      user,\n      additionalData: displayName\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* OnSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n_c = OnSignOutStart;\nexport function* onSignUpStart() {\n  takeLatest(UserActionTypes.SIGN_OUT_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(OnSignOutStart)]);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OnSignOutStart\");","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSucces","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","snapShot","get","id","data","signInWithGoogle","user","signInWithPopup","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","OnSignOutStart","SIGN_OUT_START","onSignUpStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,YAAvE,EAAqFC,aAArF,QAA0G,gBAA1G;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,iCAAhF;AAGA,OAAO,UAAUC,uBAAV,CAAmCC,QAAnC,EAA6C;AAEhD,QAAMC,OAAO,GAAG,MAAMf,IAAI,CAACW,yBAAD,EAA4BG,QAA5B,CAA1B;AAEA,QAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAEA,QAAMlB,GAAG,CAELI,aAAa,CAAC;AAAEe,IAAAA,EAAE,EAAEF,QAAQ,CAACE,EAAf;AAAmB,OAAGF,QAAQ,CAACG,IAAT;AAAtB,GAAD,CAFR,CAAT;AAMH;AACD,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAEG,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAAvB;AAGC,UAAMG,uBAAuB,CAACQ,IAAD,CAA7B;AAIP,GATD,CASE,OAAOE,KAAP,EAAc;AAEZ,UAAMxB,GAAG,CAAEK,aAAa,CAACmB,KAAD,CAAf,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAE/D,MAAI;AAEA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AAEA,UAAMd,uBAAuB,CAACQ,IAAD,CAA7B;AAIH,GARD,CAQE,OAAOE,KAAP,EAAc;AAEZ,UAAMxB,GAAG,CACDK,aAAa,CAACmB,KAAD,CADZ,CAAT;AAGH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,MAAI;AAEA,UAAMf,QAAQ,GAAG,MAAMF,cAAc,EAArC;AAEA,QAAI,CAACE,QAAL,EAAe;AAEf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AAEH,GARD,CAQE,OAAOS,KAAP,EAAc;AAEZ,UAAMxB,GAAG,CAELK,aAAa,CAACmB,KAAD,CAFR,CAAT;AAIH;AAEJ;AAED,OAAO,UAAUO,OAAV,GAAoB;AAEvB,MAAI;AAEA,UAAMrB,IAAI,CAACqB,OAAL,EAAN;AAEA,UAAM/B,GAAG,CAELM,cAAc,EAFT,CAAT;AAKH,GATD,CASE,OAAOkB,KAAP,EAAc;AAEZxB,IAAAA,GAAG,CAECO,cAAc,CAACiB,KAAD,CAFf,CAAH;AAIH;AACJ;AAED,OAAO,UAAUQ,MAAV,CAAiB;AAACN,EAAAA,OAAO,EAAG;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBK,IAAAA;AAAnB;AAAX,CAAjB,EAA8D;AAElE,MAAI;AAEA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACwB,8BAAL,CAAoCP,KAApC,EAA2CC,QAA3C,CAAvB;AAEA,UAAM5B,GAAG,CAELQ,YAAY,CAAC;AAACc,MAAAA,IAAD;AAAQa,MAAAA,cAAc,EAAEF;AAAxB,KAAD,CAFP,CAAT;AAKH,GATD,CASE,OAAOT,KAAP,EAAc;AAEf,UAAMxB,GAAG,CAELS,aAAa,CAACe,KAAD,CAFR,CAAT;AAIA;AACH;AAED,OAAO,UAAUY,mBAAV,GAA+B;AAE/B,QAAMrC,UAAU,CAACI,eAAe,CAACkC,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACN;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AAElC,QAAMvC,UAAU,CAACI,eAAe,CAACoC,mBAAjB,EAAsCd,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAAgC;AAEnC,QAAOzC,UAAU,CAACI,eAAe,CAACsC,kBAAjB,EAAoCX,mBAApC,CAAjB;AACH;AAED,OAAO,UAAUY,cAAV,GAA2B;AAE9B,QAAM3C,UAAU,CAACI,eAAe,CAACwC,cAAjB,EAAiCZ,OAAjC,CAAhB;AACH;KAHgBW,c;AAKjB,OAAO,UAAUE,aAAV,GAAyB;AAE5B7C,EAAAA,UAAU,CAACI,eAAe,CAACwC,cAAjB,EAAiCX,MAAjC,CAAV;AACH;AAED,OAAQ,UAAUa,SAAV,GAAsB;AAE1B,QAAM3C,GAAG,CAAC,CAAED,IAAI,CAACmC,mBAAD,CAAN,EACEnC,IAAI,CAACqC,kBAAD,CADN,EAEErC,IAAI,CAACuC,kBAAD,CAFN,EAGEvC,IAAI,CAACyC,cAAD,CAHN,CAAD,CAAT;AAMH","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\n\nimport UserActionTypes from './user.types'\n\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSucces, signUpFailure } from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from './../../firebase/firebase.utils'\n\n\nexport function* getSnapshotFromUserAuth( userAuth) {\n\n    const userRef = yield call(createUserProfileDocument, userAuth)\n\n    const snapShot = yield userRef.get()\n\n    yield put(\n\n        signInSuccess({ id: snapShot.id, ...snapShot.data() })\n\n    )\n\n}\nexport function* signInWithGoogle() {\n\n    try {\n        \n           const { user } = yield auth.signInWithPopup(googleProvider)\n\n\n            yield getSnapshotFromUserAuth(user)\n\n   \n\n    } catch (error) {\n        \n        yield put( signInFailure(error))\n    }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\n    try {\n\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        \n        yield getSnapshotFromUserAuth(user)\n\n     \n\n    } catch (error) {\n\n        yield put(\n                signInFailure(error)\n             )\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n\n        const userAuth = yield getCurrentUser()\n\n        if (!userAuth) return\n\n        yield getSnapshotFromUserAuth(userAuth)\n\n    } catch (error) {\n\n        yield put(\n\n            signInFailure(error)\n        )\n    }\n\n}\n\nexport function* signOut() {\n\n    try {\n        \n        yield auth.signOut()\n\n        yield put (\n\n            signOutSuccess()\n        )\n\n    } catch (error) {\n        \n        put(\n\n            signOutFailure(error)\n        )\n    }\n}\n\nexport function* signUp({payload : { email, password, displayName}}) {\n\n   try {\n       \n       const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n       \n       yield put(\n\n           signUpSucces({user,  additionalData: displayName })\n       )\n       \n   } catch (error) {\n       \n    yield put(\n\n        signUpFailure(error)\n    )\n   }\n}\n\nexport function* onGoogleSignInStart(){\n\n       yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession()  {\n\n    yield  takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\n}\n\nexport function* OnSignOutStart() {\n\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart(){\n\n    takeLatest(UserActionTypes.SIGN_OUT_START, signUp)\n}\n\nexport  function* userSagas() {\n    \n    yield all([ call(onGoogleSignInStart), \n                call(onEmailSignInStart), \n                call(onCheckUserSession),\n                call(OnSignOutStart),\n            ])\n\n}"]},"metadata":{},"sourceType":"module"}