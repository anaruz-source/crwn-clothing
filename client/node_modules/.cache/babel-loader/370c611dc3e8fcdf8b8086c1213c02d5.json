{"ast":null,"code":"var _jsxFileName = \"/home/anaruz/www/react/crwn-cloth-learning/client/src/providers/cart/cart.provider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getTotalPrice } from './cart.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  hidden: true,\n  cartItems: [],\n  cartItemsCount: 0,\n  total: 0,\n  addItem: () => {},\n  removeItem: () => {},\n  clearItemFromCart: () => {},\n  toggleHidden: () => {}\n});\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [hidden, setHidden] = useState(true);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n  const [total, setTotalCount] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  useEffect(() => setCartItemsCount(getCartItemsCount(cartItems)), [cartItems]);\n  useEffect(() => setCartItemsCount(getTotalPrice(cartItems)), [cartItems]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      hidden,\n      cartItems,\n      cartItemsCount,\n      total,\n      toggleHidden,\n      addItem,\n      removeItem,\n      clearItemFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"f1Aw905P5e19dP3ZfyloXxQh/fY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/client/src/providers/cart/cart.provider.jsx"],"names":["React","createContext","useState","useEffect","addItemToCart","removeItemFromCart","filterItemFromCart","getCartItemsCount","getTotalPrice","CartContext","hidden","cartItems","cartItemsCount","total","addItem","removeItem","clearItemFromCart","toggleHidden","CartProvider","children","setHidden","setCartItems","setCartItemsCount","setTotalCount","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,EAA4CC,kBAA5C,EAAgEC,iBAAhE,EAAmFC,aAAnF,QAAwG,cAAxG;;AAEA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC;AACtCS,EAAAA,MAAM,EAAE,IAD8B;AAEtCC,EAAAA,SAAS,EAAE,EAF2B;AAGtCC,EAAAA,cAAc,EAAE,CAHsB;AAItCC,EAAAA,KAAK,EAAE,CAJ+B;AAKtCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CALqB;AAMtCC,EAAAA,UAAU,EAAE,MAAM,CAAE,CANkB;AAOtCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CAPW;AAQrCC,EAAAA,YAAY,EAAE,MAAM,CAAG;AARc,CAAD,CAAjC;;AAYP,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAGnC,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsBlB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYU,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,cAAD,EAAiBU,iBAAjB,IAAsCpB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQU,aAAR,IAAyBrB,QAAQ,CAAC,CAAD,CAAvC;;AAGA,QAAMY,OAAO,GAAGU,IAAI,IAAIH,YAAY,CAACjB,aAAa,CAACO,SAAD,EAAYa,IAAZ,CAAd,CAApC;;AACA,QAAMT,UAAU,GAAGS,IAAI,IAAIH,YAAY,CAAChB,kBAAkB,CAACM,SAAD,EAAYa,IAAZ,CAAnB,CAAvC;;AACA,QAAMR,iBAAiB,GAAGQ,IAAI,IAAIH,YAAY,CAACf,kBAAkB,CAACK,SAAD,EAAYa,IAAZ,CAAnB,CAA9C;;AACA,QAAMP,YAAY,GAAG,MAAMG,SAAS,CAAC,CAACV,MAAF,CAApC;;AAEAP,EAAAA,SAAS,CAAC,MAAMmB,iBAAiB,CAACf,iBAAiB,CAACI,SAAD,CAAlB,CAAxB,EAAwD,CAACA,SAAD,CAAxD,CAAT;AACAR,EAAAA,SAAS,CAAC,MAAMmB,iBAAiB,CAACd,aAAa,CAACG,SAAD,CAAd,CAAxB,EAAoD,CAACA,SAAD,CAApD,CAAT;AAEA,sBAEI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAC3BD,MAAAA,MAD2B;AAE3BC,MAAAA,SAF2B;AAG3BC,MAAAA,cAH2B;AAI3BC,MAAAA,KAJ2B;AAK3BI,MAAAA,YAL2B;AAM3BH,MAAAA,OAN2B;AAO3BC,MAAAA,UAP2B;AAQ3BC,MAAAA;AAR2B,KAA/B;AAAA,cAYMG;AAZN;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH,CAnCD;;GAAMD,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getTotalPrice } from './cart.utils'\n\nexport const CartContext = createContext({\n   hidden: true,\n   cartItems: [],\n   cartItemsCount: 0,\n   total: 0,\n   addItem: () => {},\n   removeItem: () => {},\n   clearItemFromCart: () => {},\n    toggleHidden: () => { },\n})\n\n\nconst CartProvider = ({ children }) => { \n    \n\n    const [hidden, setHidden] = useState(true)\n    const [cartItems, setCartItems] = useState([])\n    const [cartItemsCount, setCartItemsCount] = useState(0)\n    const [total, setTotalCount] = useState(0)\n\n\n    const addItem = item => setCartItems(addItemToCart(cartItems, item))\n    const removeItem = item => setCartItems(removeItemFromCart(cartItems, item))\n    const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item))\n    const toggleHidden = () => setHidden(!hidden)\n\n    useEffect(() => setCartItemsCount(getCartItemsCount(cartItems)), [cartItems] )\n    useEffect(() => setCartItemsCount(getTotalPrice(cartItems)), [cartItems] )\n\n    return(\n\n        <CartContext.Provider value = {{\n            hidden,\n            cartItems,\n            cartItemsCount,\n            total,\n            toggleHidden,\n            addItem,\n            removeItem,\n            clearItemFromCart,\n\n        }}>\n        \n            { children }\n        \n        </CartContext.Provider>\n    )\n}\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}