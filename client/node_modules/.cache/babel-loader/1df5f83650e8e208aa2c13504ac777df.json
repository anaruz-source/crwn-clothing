{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from './../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const snapShot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: snapShot.id,\n      ...snapShot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/anaruz/www/react/crwn-cloth-learning/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","snapShot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAUC,aAAV,EAAyBC,aAAzB,QAA6C,gBAA7C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,iCAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAEhC,MAAI;AAEG,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AAEA,UAAMK,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AAEA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAEA,UAAMd,GAAG,CAENe,mBAAmB,CAAE;AAAEC,MAAAA,EAAE,EAAEH,QAAQ,CAACG,EAAf;AAAmB,SAAGH,QAAQ,CAACI,IAAT;AAAtB,KAAF,CAFb,CAAT;AAON,GAfD,CAeE,OAAOC,KAAP,EAAc;AAEZ,UAAMlB,GAAG,CAAEmB,mBAAmB,CAACD,KAAD,CAArB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAE/D,MAAI;AAEA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AAEA,UAAMX,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AAEA,UAAMG,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AAEA,UAAMd,GAAG,CAELyB,kBAAkB,CAAC;AAAET,MAAAA,EAAE,EAAEH,QAAQ,CAACG,EAAf;AAAmB,SAAGH,QAAQ,CAACI,IAAT;AAAtB,KAAD,CAFb,CAAT;AAOH,GAfD,CAeE,OAAOC,KAAP,EAAc;AAEZ,UAAMlB,GAAG,CACL0B,kBAAkB,CAACR,KAAD,CADb,CAAT;AAGH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAA+B;AAE/B,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCnB,gBAAvC,CAAhB;AACN;AAED,OAAO,UAAUoB,kBAAV,GAA+B;AAElC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AACD,OAAQ,UAAUW,SAAV,GAAsB;AAE1B,QAAM7B,GAAG,CAAC,CAAED,IAAI,CAAC0B,mBAAD,CAAN,EAA6B1B,IAAI,CAAC4B,kBAAD,CAAjC,CAAD,CAAT;AAEH","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects'\n\n\nimport UserActionTypes from './user.types'\n\nimport {  signInSuccess, signInFailure} from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument } from './../../firebase/firebase.utils'\n\nexport function* signInWithGoogle() {\n\n    try {\n        \n           const { user } = yield auth.signInWithPopup(googleProvider)\n\n           const userRef = yield call(createUserProfileDocument, user )\n\n           const snapShot = yield userRef.get()\n\n           yield put(\n               \n              googleSignInSuccess( { id: snapShot.id, ...snapShot.data()})\n              \n              )\n  \n\n    } catch (error) {\n        \n        yield put( googleSignInFailure(error))\n    }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\n    try {\n\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n\n        const userRef = yield call(createUserProfileDocument, user)\n\n        const snapShot = yield userRef.get()\n\n        yield put(\n\n            emailSignInSuccess({ id: snapShot.id, ...snapShot.data() })\n\n        ) \n\n\n    } catch (error) {\n\n        yield put(\n            emailSignInFailure(error)\n             )\n    }\n}\n\nexport function* onGoogleSignInStart(){\n\n       yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\nexport  function* userSagas() {\n    \n    yield all([ call(onGoogleSignInStart), call(onEmailSignInStart)])\n\n}"]},"metadata":{},"sourceType":"module"}